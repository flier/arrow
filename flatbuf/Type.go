// automatically generated by the FlatBuffers compiler, do not modify

package flatbuf

/// ----------------------------------------------------------------------
/// Top-level Type value, enabling extensible type-specific metadata. We can
/// add new logical types to Type without breaking backwards compatibility
const (
	TypeNONE = 0
	TypeNull = 1
	TypeInt = 2
	TypeFloatingPoint = 3
	TypeBinary = 4
	TypeUtf8 = 5
	TypeBool = 6
	TypeDecimal = 7
	TypeDate = 8
	TypeTime = 9
	TypeTimestamp = 10
	TypeInterval = 11
	TypeList = 12
	TypeStruct_ = 13
	TypeUnion = 14
)

var EnumNamesType = map[int]string{
	TypeNONE:"NONE",
	TypeNull:"Null",
	TypeInt:"Int",
	TypeFloatingPoint:"FloatingPoint",
	TypeBinary:"Binary",
	TypeUtf8:"Utf8",
	TypeBool:"Bool",
	TypeDecimal:"Decimal",
	TypeDate:"Date",
	TypeTime:"Time",
	TypeTimestamp:"Timestamp",
	TypeInterval:"Interval",
	TypeList:"List",
	TypeStruct_:"Struct_",
	TypeUnion:"Union",
}

